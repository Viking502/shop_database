-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   at:        2020-01-16 10:37:15 CET
--   site:      SQL Server 2012
--   type:      SQL Server 2012



CREATE TABLE Address 
    (
     id INTEGER NOT NULL , 
     country VARCHAR NOT NULL , 
     state VARCHAR NOT NULL , 
     street VARCHAR , 
     number INTEGER NOT NULL , 
     flat_number INTEGER , 
     zip_code INTEGER NOT NULL , 
     User_id INTEGER NOT NULL 
    )
GO

ALTER TABLE Address ADD CONSTRAINT Address_PK PRIMARY KEY CLUSTERED (id, User_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Attachment 
    (
     id INTEGER NOT NULL , 
     url VARCHAR NOT NULL , 
     size INTEGER , 
     data_type VARCHAR , 
     Message_id INTEGER NOT NULL , 
     Message_Conversation_id INTEGER NOT NULL , 
     Message_Conversation_User_id INTEGER NOT NULL , 
     Message_User_id INTEGER NOT NULL , 
     Message_id2 INTEGER NOT NULL 
    )
GO

ALTER TABLE Attachment ADD CONSTRAINT Attachment_PK PRIMARY KEY CLUSTERED (id, Message_id, Message_Conversation_id, Message_id2)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Balance 
    (
     id INTEGER NOT NULL , 
     month DATETIME NOT NULL , 
     income MONEY NOT NULL , 
     expense MONEY NOT NULL , 
     balance MONEY NOT NULL 
    )
GO

ALTER TABLE Balance ADD CONSTRAINT Balance_PK PRIMARY KEY CLUSTERED (id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Blacklist 
    (
     id INTEGER , 
     ip_address VARCHAR , 
     note VARCHAR 
    )
GO

CREATE TABLE Client 
    (
     id INTEGER NOT NULL , 
     register_date DATETIME NOT NULL , 
     policy_accepted BIT NOT NULL , 
     user_activity_id INTEGER NOT NULL 
    )
GO 

    


CREATE UNIQUE NONCLUSTERED INDEX 
    Client__IDX ON Client 
    ( 
     user_activity_id 
    ) 
GO

ALTER TABLE Client ADD CONSTRAINT Client_PK PRIMARY KEY CLUSTERED (id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Conversation 
    (
     id INTEGER NOT NULL , 
     start_date DATETIME NOT NULL , 
     is_closed BIT , 
     conversation_categorie_id INTEGER NOT NULL , 
     User_id INTEGER NOT NULL , 
     Worker_id INTEGER NOT NULL 
    )
GO

ALTER TABLE Conversation ADD CONSTRAINT Conversation_PK PRIMARY KEY CLUSTERED (id, Worker_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE conversation_categorie 
    (
     id INTEGER NOT NULL , 
     name VARCHAR NOT NULL , 
     priority INTEGER NOT NULL 
    )
GO

ALTER TABLE conversation_categorie ADD CONSTRAINT conversation_categorie_PK PRIMARY KEY CLUSTERED (id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Message 
    (
     id INTEGER NOT NULL , 
     author_category VARCHAR NOT NULL , 
     message VARCHAR , 
     date DATETIME NOT NULL , 
     Conversation_id INTEGER NOT NULL , 
     Conversation_User_id INTEGER NOT NULL , 
     User_id INTEGER NOT NULL , 
     Conversation_Worker_id INTEGER NOT NULL 
    )
GO

ALTER TABLE Message ADD CONSTRAINT Message_PK PRIMARY KEY CLUSTERED (id, Conversation_id, Conversation_Worker_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Product 
    (
     id INTEGER NOT NULL , 
     name VARCHAR NOT NULL , 
     Transaction_details_id INTEGER NOT NULL , 
     Transaction_details_Transaction_id INTEGER NOT NULL , 
     Product_category_id INTEGER NOT NULL 
    )
GO 

    


CREATE UNIQUE NONCLUSTERED INDEX 
    Product__IDX ON Product 
    ( 
     Transaction_details_id , 
     Transaction_details_Transaction_id 
    ) 
GO

ALTER TABLE Product ADD CONSTRAINT Product_PK PRIMARY KEY CLUSTERED (id, Product_category_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Product_category 
    (
     id INTEGER NOT NULL , 
     name VARCHAR NOT NULL , 
     tax FLOAT NOT NULL 
    )
GO

ALTER TABLE Product_category ADD CONSTRAINT Product_category_PK PRIMARY KEY CLUSTERED (id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Product_image 
    (
     id INTEGER NOT NULL , 
     name VARCHAR , 
     path VARCHAR NOT NULL , 
     width INTEGER NOT NULL , 
     height INTEGER NOT NULL , 
     Product_id INTEGER NOT NULL , 
     Product_Product_category_id INTEGER NOT NULL 
    )
GO

ALTER TABLE Product_image ADD CONSTRAINT Product_image_PK PRIMARY KEY CLUSTERED (id, Product_id, Product_Product_category_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Product_price 
    (
     price MONEY NOT NULL , 
     valid_from DATETIME NOT NULL , 
     valid_to DATETIME , 
     Product_id INTEGER NOT NULL , 
     Product_Product_category_id INTEGER NOT NULL 
    )
GO

ALTER TABLE Product_price ADD CONSTRAINT Product_price_PK PRIMARY KEY CLUSTERED (Product_id, Product_Product_category_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE "Transaction" 
    (
     id INTEGER NOT NULL , 
     date DATETIME NOT NULL , 
     payment_date DATETIME 
    )
GO

ALTER TABLE "Transaction" ADD CONSTRAINT Transaction_PK PRIMARY KEY CLUSTERED (id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Transaction_details 
    (
     id INTEGER NOT NULL , 
     Transaction_id INTEGER NOT NULL 
    )
GO

ALTER TABLE Transaction_details ADD CONSTRAINT Transaction_details_PK PRIMARY KEY CLUSTERED (id, Transaction_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Transaction_history 
    (
     id INTEGER NOT NULL , 
     status VARCHAR NOT NULL , 
     date DATETIME NOT NULL , 
     note VARCHAR , 
     Transaction_id INTEGER NOT NULL 
    )
GO

ALTER TABLE Transaction_history ADD CONSTRAINT Transaction_history_PK PRIMARY KEY CLUSTERED (id, Transaction_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE "User" 
    (
     id INTEGER NOT NULL , 
     name VARCHAR NOT NULL , 
     surname VARCHAR NOT NULL , 
     email VARCHAR NOT NULL , 
     password VARCHAR NOT NULL , 
     register_date DATETIME NOT NULL , 
     policy_accepted BIT NOT NULL 
    )
GO

ALTER TABLE "User" ADD CONSTRAINT User_PK PRIMARY KEY CLUSTERED (id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE user_activity 
    (
     id INTEGER NOT NULL , 
     transactions_num INTEGER NOT NULL , 
     last_login DATETIME NOT NULL , 
     total_expences MONEY NOT NULL 
    )
GO

ALTER TABLE user_activity ADD CONSTRAINT user_activity_PK PRIMARY KEY CLUSTERED (id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE user_logs 
    (
     id INTEGER NOT NULL , 
     date DATETIME NOT NULL , 
     category VARCHAR NOT NULL , 
     message VARCHAR , 
     Client_id INTEGER NOT NULL 
    )
GO

ALTER TABLE user_logs ADD CONSTRAINT user_logs_PK PRIMARY KEY CLUSTERED (id, Client_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Worker 
    (
     id INTEGER NOT NULL , 
     salary MONEY NOT NULL , 
     employed_since DATETIME NOT NULL , 
     position VARCHAR NOT NULL 
    )
GO

ALTER TABLE Worker ADD CONSTRAINT Worker_PK PRIMARY KEY CLUSTERED (id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

ALTER TABLE Address 
    ADD CONSTRAINT Address_Client_FK FOREIGN KEY 
    REFERENCES Client 
    ( 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Address 
    ADD CONSTRAINT Address_User_FK FOREIGN KEY 
    ( 
     User_id
    ) 
    REFERENCES "User" 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Attachment 
    ADD CONSTRAINT Attachment_Message_FK FOREIGN KEY 
    ( 
     Message_id, 
     Message_Conversation_id, 
     Message_id2
    ) 
    REFERENCES Message 
    ( 
     id , 
     Conversation_id , 
     Conversation_Worker_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Client 
    ADD CONSTRAINT Client_user_activity_FK FOREIGN KEY 
    ( 
     user_activity_id
    ) 
    REFERENCES user_activity 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Client 
    ADD CONSTRAINT Client_Users_FK FOREIGN KEY 
    ( 
     id
    ) 
    REFERENCES "User" 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Conversation 
    ADD CONSTRAINT Conversation_Client_FK FOREIGN KEY 
    REFERENCES Client 
    ( 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Conversation 
    ADD CONSTRAINT Conversation_conversation_categorie_FK FOREIGN KEY 
    ( 
     conversation_categorie_id
    ) 
    REFERENCES conversation_categorie 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Conversation 
    ADD CONSTRAINT Conversation_User_FK FOREIGN KEY 
    ( 
     User_id
    ) 
    REFERENCES "User" 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Conversation 
    ADD CONSTRAINT Conversation_Worker_FK FOREIGN KEY 
    ( 
     Worker_id
    ) 
    REFERENCES Worker 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Message 
    ADD CONSTRAINT Message_Conversation_FK FOREIGN KEY 
    ( 
     Conversation_id, 
     Conversation_Worker_id
    ) 
    REFERENCES Conversation 
    ( 
     id , 
     Worker_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Message 
    ADD CONSTRAINT Message_User_FK FOREIGN KEY 
    ( 
     User_id
    ) 
    REFERENCES "User" 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Product_image 
    ADD CONSTRAINT Product_image_Product_FK FOREIGN KEY 
    ( 
     Product_id, 
     Product_Product_category_id
    ) 
    REFERENCES Product 
    ( 
     id , 
     Product_category_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Product_price 
    ADD CONSTRAINT Product_price_Product_FK FOREIGN KEY 
    ( 
     Product_id, 
     Product_Product_category_id
    ) 
    REFERENCES Product 
    ( 
     id , 
     Product_category_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Product 
    ADD CONSTRAINT Product_Product_category_FK FOREIGN KEY 
    ( 
     Product_category_id
    ) 
    REFERENCES Product_category 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Product 
    ADD CONSTRAINT Product_Transaction_details_FK FOREIGN KEY 
    ( 
     Transaction_details_id, 
     Transaction_details_Transaction_id
    ) 
    REFERENCES Transaction_details 
    ( 
     id , 
     Transaction_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Transaction_details 
    ADD CONSTRAINT Transaction_details_Transaction_FK FOREIGN KEY 
    ( 
     Transaction_id
    ) 
    REFERENCES "Transaction" 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Transaction_history 
    ADD CONSTRAINT Transaction_history_Transaction_FK FOREIGN KEY 
    ( 
     Transaction_id
    ) 
    REFERENCES "Transaction" 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE user_logs 
    ADD CONSTRAINT user_logs_Client_FK FOREIGN KEY 
    ( 
     Client_id
    ) 
    REFERENCES Client 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Worker 
    ADD CONSTRAINT Worker_Users_FK FOREIGN KEY 
    ( 
     id
    ) 
    REFERENCES "User" 
    ( 
     id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            19
-- CREATE INDEX                             2
-- ALTER TABLE                             37
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE DATABASE                          0
-- CREATE DEFAULT                           0
-- CREATE INDEX ON VIEW                     0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE ROLE                              0
-- CREATE RULE                              0
-- CREATE SCHEMA                            0
-- CREATE SEQUENCE                          0
-- CREATE PARTITION FUNCTION                0
-- CREATE PARTITION SCHEME                  0
-- 
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
